version: '3.9'

networks:
  badgerdoc-scheduler:
    driver: bridge

services:
  minio:
    image: 'bitnami/minio:latest'
    ports:
      - "9000:9000"
    env_file:
      - .env

  db:
    image: postgres:13
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    networks:
      - badgerdoc-scheduler
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=pipelines,scheduler,file_management,annotation,jobs

  pgadmin:
    image: dpage/pgadmin4
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 250
    ports:
      - "5050:80"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    logging:
      driver: none
    networks:
      - badgerdoc-scheduler

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    logging:
      driver: none
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    networks:
      - badgerdoc-scheduler
    depends_on:
      - zookeeper

  pipelines:
    build:
      context: .
      target: build
    env_file:
      - .env
    environment:
      - DB_URI=postgresql+psycopg2://postgres:postgres@db:5432/pipelines
      - S3_CREDENTIALS_PROVIDER=minio
      - S3_ENDPOINT=minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - PREPROCESSING_URL=//preprocess:8000/
      - POSTPROCESSING_URI=//postprocess:8004/
    volumes:
      - .:/opt/pipeline_executor
    networks:
      - badgerdoc-scheduler
    ports:
      - "8001:8001"
    command: bash -c "./wait-for-it.sh -t 0 kafka:9092 && alembic upgrade head && uvicorn src.app:app --host 0.0.0.0 --port 8001 --reload"
    depends_on:
      - minio
      - db
      - kafka
    restart: on-failure

  scheduler:
    build:
      context: ../scheduler/
      target: build
    environment:
      - TEST_MODE=True
      - KEYCLOAK_URL=http://dev1.badgerdoc.com
      - DB_URL=postgresql+psycopg2://postgres:postgres@db:5432/scheduler
    networks:
      - badgerdoc-scheduler
    ports:
      - "8002:8002"
    command: bash -c "./scheduler/wait-for-it.sh -t 0 kafka:9092 && alembic upgrade head && uvicorn scheduler.app:app --host 0.0.0.0 --port 8002"
    depends_on:
      - db
      - kafka
    restart: on-failure

  preprocess:
    build:
      context: ../preprocessing
      dockerfile: ../preprocessing/Dockerfile
      target: build
    ports:
      - "8000:8000"
    volumes:
      - "../preprocessing/dev_files/preprocess_data/:/volume"
    env_file:
      - ../preprocessing/.env
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    depends_on:
      - minio

  assets:
    build:
      context: ../assets
      dockerfile: ../assets/Dockerfile
      target: build
    env_file:
      - ../assets/.env
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@db:5432/file_management
      - ENDPOINT=minio:9000
    volumes:
      - ../assets/:/opt/assets/
    ports:
      - "8080:8080"
    depends_on:
      - minio
      - db
    restart: on-failure

  annotation:
    build:
      context: ../annotation
      dockerfile: ../annotation/Dockerfile
      target: build
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8002
      - POSTGRES_HOST=db
      - ASSETS_URL="//assets:8080/datasets"
      - ASSETS_FILES_URL="//assets:8080/files/search"
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8002"
    ports:
      - "8002:8002"
    depends_on:
      - minio
      - db
    restart: on-failure

  postprocess:
    build:
      context: ../processing
      dockerfile: ../processing/Dockerfile
      target: build
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "8004:8004"
    depends_on:
      - minio
    restart: on-failure

  jobs:
    build:
      context: ../jobs
      dockerfile: ../jobs/Dockerfile
      target: build
    environment:
      - POSTGRESQL_JOBMANAGER_DATABASE_URI=postgresql+psycopg2://postgres:postgres@db:5432/jobs
      - HOST_PIPELINES=//pipelines:8001
      - HOST_ASSETS=//assets:8080
      - HOST_ANNOTATION=//annotation:8002
      - JOBS_HOST=//jobs:8005
    command: bash -c "alembic upgrade head && uvicorn src.main:app --host 0.0.0.0 --port 8005"
    ports:
      - "8005:8005"
    depends_on:
      - db
      - assets
      - pipelines
    restart: on-failure

volumes:
  pgdata:
