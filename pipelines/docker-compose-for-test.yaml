version: '3.9'

networks:
  badgerdoc-scheduler:
    driver: bridge

services:
  minio:
    image: 'bitnami/minio:latest'
    ports:
      - "9000:9000"
    env_file:
      - .env

  db:
    image: postgres:13
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    networks:
      - badgerdoc-scheduler
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=pipelines,scheduler,file_management,annotation,jobs

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    logging:
      driver: none
    networks:
      - badgerdoc-scheduler

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    logging:
      driver: none
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    networks:
      - badgerdoc-scheduler
    depends_on:
      - zookeeper

  pipelines:
    build:
      context: .
      target: development
    container_name: pipelines_web_app
    env_file:
      - .env
    environment:
      - DB_URI=postgresql+psycopg2://postgres:postgres@db:5432/pipelines
      - S3_CREDENTIALS_PROVIDER=minio
      - S3_ENDPOINT=minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - PREPROCESSING_URL=//preprocess:8000/
      - POSTPROCESSING_URI=//postprocess:8004/
    volumes:
      - .:/opt/pipelines
    networks:
      - badgerdoc-scheduler
    ports:
      - "8001:8001"
    depends_on:
      - minio
      - db
      - kafka
    restart: on-failure

volumes:
  pgdata:
