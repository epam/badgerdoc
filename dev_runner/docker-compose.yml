version: "3.9"


services:
  postgres-postgresql:
    image: postgres:13.4
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    container_name: postgres
    networks:
      - bd
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=annotation,file_management,job_manager,models,pipelines,processing,scheduler,taxonomy,keycloak_db
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: 'bitnami/minio:latest'
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - bd
    environment:
        - MINIO_ROOT_USER=minioadmin
        - MINIO_ROOT_PASSWORD=minioadmin

  gotenberg:
    image: gotenberg/gotenberg:7
    ports:
      - "3000:3000"
    networks:
      - bd
    env_file:
      - goten.env

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    networks:
      - bd
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    networks:
      - bd
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    depends_on:
      - zookeeper

  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    networks:
      - bd
    ports:
      - "8080:8080"
      - "8443:8443"
    environment:
        - KEYCLOAK_USER=admin
        - KEYCLOAK_PASSWORD=admin
        - DB_VENDOR=POSTGRES
        - DB_ADDR=postgres-postgresql
        - DB_DATABASE=keycloak_db
        - DB_USER=postgres
        - DB_PASSWORD=postgres
    depends_on:
      - postgres-postgresql

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
    container_name: elastic
    networks:
      - bd
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xmx300m
    restart: always
    deploy:
      resources:
        limits:
          memory: 512m
    healthcheck:
      test: curl --fail http://localhost:9200 || exit 1
      interval: 30s
      timeout: 3s
      retries: 10
      start_period: 30s
    ports:
      - "9200:9200"

volumes:
  pgdata:

networks:
  bd:
    driver: bridge
