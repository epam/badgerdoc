name: assets precommit and test
run-name: assets precommit and test
on:
  push:
    paths:
      - 'assets/**'
      - '.github/workflows/assets.yml'
  pull_request:
    paths:
      - 'assets/**'
      - '.github/workflows/assets.yml'
jobs:
  assets-pre-commit-actions:
    strategy:
      matrix:
        python-version: [ "3.8.15" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Run isort
        uses: isort/isort-action@v1.1.0
        with:
          configuration:
            --profile=black
            --filter-files
            --line-length=79
      - name: Black
        uses: psf/black@stable
        with:
          options: "--line-length=79"
      - run: pip install flake8
      - run: flake8 --extend-ignore=E203 assets
  assets-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8.15" ]
    services:
      postgres-postgresql:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: file_management
          USE_TEST_DB: True
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      minio:
        image: 'bitnami/minio:latest'
        ports:
          - 9000:9000
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd assets
          sudo apt-get update && sudo apt-get -y install poppler-utils
          pip install poetry>=1.1.13
          poetry install --no-root --no-interaction
          poetry add ../lib/filter_lib
          poetry add ../lib/tenants
      - name: Test with pytest
        run: |
          cd assets
          poetry run pytest
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: file_management
          USE_TEST_DB: True
          S3_CREDENTIALS_PROVIDER: minio
          S3_ENDPOINT: localhost:9000
          S3_ACCESS_KEY: minioadmin
          S3_SECRET_KEY: minioadmin
          MINIO_SECURE_CONNECTION: False
