###################################################################
# This docker-compose file should only be used for local 
# installations.
#
# docker-compose sets up all services to be served by Reproxy 
# and exposes the following ports:
#
# - 8080 for BadgerDoc microservices
# - 8081 for Reproxy management
# - 5432 for PostgreSQL (the port can be changed in the .env 
#   file for local needs)
# - 8082 for Keycloak.
#
###################################################################

version: '3'

services:
 
  # Reproxy is used for serving all services throught one host

  reproxy:
    image: ghcr.io/umputun/reproxy
    container_name: badgerdoc-reproxy
    command: reproxy --docker.enabled --docker.auto --logger.enabled --logger.stdout --docker.network=badgerdoc_badgerdoc --mgmt.enabled --docker.exclude=badgerdoc_reproxy --docker.exclude=badgerdoc-reproxy --docker.exclude=badgerdoc-postgresql --docker.exclude=badgerdoc-keycloak
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - badgerdoc
    ports:
      - 8080:8080
      - 8081:8081
  
  # BadgerDoc dependencies 
  
  badgerdoc-minio:
    image: 'bitnami/minio:2023.3.13'
    container_name: badgerdoc-minio
    environment:
        - MINIO_ROOT_USER=${S3_ACCESS_KEY}
        - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY}
    networks:
      - badgerdoc

  badgerdoc-postgresql:
    image: postgres:13.4
    container_name: badgerdoc-postgresql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    restart: always
    networks:
      - badgerdoc
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  badgerdoc-keycloak:
    image: jboss/keycloak:15.1.1
    container_name: badgerdoc-keycloak
    ports:
      - "8082:8080"
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: badgerdoc-postgresql
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_SCHEMA: public
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
    depends_on:
      badgerdoc-postgresql:
        condition: service_healthy
    networks:
      - badgerdoc
    restart: on-failure
      
  # BadgerDoc microservices

  annotation:
    image: badgerdoc_annotation
    container_name: annotation
    environment:
      - ROOT_PATH=/annotation
    networks:
      - badgerdoc
    depends_on:
      badgerdoc-postgresql:
        condition: service_healthy

  users:
    image: badgerdoc_users
    container_name: users
    env_file:
      - .env
    environment:
      - ROOT_PATH=/users
    networks:
      - badgerdoc
    depends_on:
      badgerdoc-postgresql:
        condition: service_healthy
      badgerdoc-keycloak:
        condition: service_started

networks:
  badgerdoc:
    driver: bridge
