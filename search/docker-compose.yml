version: "3.9"

services:
  elasticsearch:
    image: amazon/opendistro-for-elasticsearch:latest
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      #- discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01 #,es02,es03
      - bootstrap.memory_lock=true
      - opendistro_security.disabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: curl --fail http://localhost:9200 || exit 1
      interval: 30s
      timeout: 3s
      retries: 10
      start_period: 30s
    networks:
      - badgerdoc-search
    ports:
      - "9203:9200"
    volumes:
      - elasticdata:/usr/share/elasticsearch/data


  backend:
    build:
      context: .
      target: build
    working_dir: /opt/search
#    image: search
    container_name: search
    ports:
      - 8083:8080
    networks:
      - badgerdoc-search
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - .:/opt/search

  embeduse:
    image: tensorflow/serving
    container_name: embeduse
    ports:
      - "8501:8501"
    volumes:
      - "C:/Projects/bd/badgerdoc/search/use-encoder/use-large:/models/model"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2185:2181"
    networks:
      - badgerdoc-search

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - badgerdoc-search

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8081:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ./config.yml:/etc/kafkaui/dynamic_config.yaml

networks:
  badgerdoc-search:
    driver: bridge

volumes:
  elasticdata:
    driver: local
