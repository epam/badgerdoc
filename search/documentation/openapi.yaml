openapi: 3.0.2
info:
  title: Badgerdoc Search
  version: 0.1.2
paths:
  /pieces/:
    get:
      tags:
        - Search
      summary: Search text pieces.
      description: Searches for text pieces saved in Elastic Search according to query\nparameters. If no parameters specified - returns all text pieces from\nElastic Search index. Supports pagination.
      operationId: get_text_piece_pieces__get
      parameters:
        - required: false
          schema:
            title: Category
            type: string
          example: Header
          name: category
          in: query
        - required: false
          schema:
            title: Content
            type: string
          example: Elasticsearch
          name: content
          in: query
        - required: false
          schema:
            title: Sentence
            type: string
          example: some sentence
          name: sentence
          in: query
        - required: false
          schema:
            title: Question
            type: string
          example: some question
          name: question
          in: query
        - required: false
          schema:
            title: Document Id
            minimum: 1
            type: integer
          example: 1
          name: document_id
          in: query
        - required: false
          schema:
            title: Page Number
            minimum: 1
            type: integer
          example: 1
          name: page_number
          in: query
        - required: false
          schema:
            title: Page Size
            maximum: 100
            minimum: 1
            type: integer
            default: 50
          example: 50
          name: page_size
          in: query
        - required: false
          schema:
            title: Page Num
            minimum: 1
            type: integer
            default: 1
          example: 1
          name: page_num
          in: query
        - required: true
          schema:
            title: X-Current-Tenant
            type: string
          example: badger-doc
          name: x-current-tenant
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultSchema'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionErrorSchema'
      security:
        - TenantDependencyDocs: []
  /indexation/{job_id}:
    post:
      tags:
        - Search
      summary: Start text pieces indexation process for provided job_id.
      description: Drops all already existing text pieces from Elastic Search index for this
      job if exists and starts indexation process for new text pieces in minio
      for annotated pages mentioned in manifest.json files for this job.
      operationId: start_indexing_indexation__job_id__post
      parameters:
        - required: true
          schema:
            title: Job Id
            type: integer
          example: 1
          name: job_id
          in: path
        - required: true
          schema:
            title: X-Current-Tenant
            type: string
          example: badger-doc
          name: x-current-tenant
          in: header
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionErrorSchema'
      security:
        - TenantDependencyDocs: []
components:
  schemas:
    ConnectionErrorSchema:
      title: ConnectionErrorSchema
      required:
        - detail
      type: object
      properties:
        detail:
          title: Detail
          type: string
      example:
        detail: 'Error: Connection error.'
    GeomObject:
      title: GeomObject
      required:
        - category
        - content
        - document_id
        - page_number
        - job_id
      type: object
      properties:
        category:
          title: Category
          type: string
          example: Header
        content:
          title: Content
          type: string
          example: ElasticSearch
        document_id:
          title: Document Id
          minimum: 1
          type: integer
          example: 1
        page_number:
          title: Page Number
          minimum: 1
          type: integer
          example: 1
        bbox:
          title: Bbox
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: number
          example:
            - 1.5
            - 1.5
            - 1.5
            - 1.5
        tokens:
          title: Tokens
          type: array
          items:
            type: string
          example:
            - token1
            - token2
            - token3
        job_id:
          title: Job Id
          minimum: 1
          type: integer
          example: 1
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    NotFoundErrorSchema:
      title: NotFoundErrorSchema
      required:
        - detail
      type: object
      properties:
        detail:
          title: Detail
          type: string
      example:
        detail: Resource was not found.
    SearchResultSchema:
      title: SearchResultSchema
      required:
        - current_page
        - page_size
        - total_objects
        - text_pieces
      type: object
      properties:
        current_page:
          title: Current Page
          minimum: 1
          type: integer
        page_size:
          title: Page Size
          minimum: 1
          type: integer
        total_objects:
          title: Total Objects
          minimum: 0
          type: integer
        text_pieces:
          title: Text Pieces
          type: array
          items:
            $ref: '#/components/schemas/GeomObject'
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
  securitySchemes:
    TenantDependencyDocs:
      type: http
      scheme: bearer
tags:
  - name: Search
    description: Actions associated with search management.
